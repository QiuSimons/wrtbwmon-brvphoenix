name: CI

on:
  push:
    branches:
    - master

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Checkout"
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Download the SDK
      run: |
        echo "Download the SDK"
        wget --no-check-certificate https://cdn.openwrt.org/releases/18.06.5/targets/x86/64/openwrt-sdk-18.06.5-x86-64_gcc-7.3.0_musl.Linux-x86_64.tar.xz
        tar -xJvf openwrt-sdk-18.06.5-x86-64_gcc-7.3.0_musl.Linux-x86_64.tar.xz
        mv ./openwrt-sdk-18.06.5-x86-64_gcc-7.3.0_musl.Linux-x86_64 ./build

    - name: Configure
      run: |
        cp -rf ./wrtbwmon ./build/package/
        cd build
        make defconfig

    - name: Build
      run: |
        cd build
        echo -e "$(nproc) thread build."
        make package/wrtbwmon/compile -j$(nproc) V=s
        echo "::set-env name=pkg_name::$(basename `ls ./bin/packages/x86_64/base/wrtbwmon*.ipk`)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        target_commitish: master
        body: |
            Changes in this Release
            - First Change
            - Second Change
        draft: true
        prerelease: true

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/bin/packages/x86_64/base/${{ env.pkg_name }}
        asset_name: ${{ env.pkg_name }}
        asset_content_type: application/gzip
